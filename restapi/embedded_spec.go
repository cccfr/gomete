// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for transactions",
    "title": "Space-Market",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "3.0.0"
  },
  "basePath": "/v3",
  "paths": {
    "/audits/": {
      "get": {
        "description": "statistics about previous transactions",
        "tags": [
          "audits"
        ],
        "summary": "statistics about previous transactions",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "description": "start date in ISO8601 format",
            "name": "start",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "end date in ISO8601 format",
            "name": "end",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "audits",
            "schema": {
              "type": "object",
              "required": [
                "sum",
                "payments_sum",
                "deposits_sum",
                "audits"
              ],
              "properties": {
                "audits": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "difference": {
                        "type": "integer"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "product": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "deposits_sum": {
                  "description": "as cents",
                  "type": "integer"
                },
                "payments_sum": {
                  "description": "as cents",
                  "type": "integer"
                },
                "sum": {
                  "description": "sum as cents",
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "Audits deactivated by user"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/barcodes/": {
      "post": {
        "tags": [
          "barcodes"
        ],
        "summary": "create a new barcode",
        "parameters": [
          {
            "name": "barcode",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "barcode": {
                  "type": "string"
                },
                "linked": {
                  "description": "id of linked object (product or user)",
                  "type": "integer"
                },
                "type": {
                  "description": "product or user",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created barcode",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Barcode"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "409": {
            "description": "a barcode with this name already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/barcodes/{id}/": {
      "get": {
        "tags": [
          "barcodes"
        ],
        "summary": "get details for a given barcode",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "details of barcode",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Barcode"
              }
            }
          },
          "404": {
            "description": "barcode not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "delete": {
        "tags": [
          "barcodes"
        ],
        "summary": "delete the barcode",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "barcode deleted"
          },
          "404": {
            "description": "barcode not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "patch": {
        "tags": [
          "barcodes"
        ],
        "summary": "update an existing barcode",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "barcode",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "linked": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "barcode updated",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Barcode"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "barcode not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/denominations/": {
      "get": {
        "tags": [
          "denominations"
        ],
        "summary": "get a list of all configured denominations",
        "responses": {
          "200": {
            "description": "list of denominations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "409": {
            "description": "a denomination with this value already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "post": {
        "tags": [
          "denominations"
        ],
        "summary": "create a new denomination",
        "parameters": [
          {
            "name": "denominations",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "image": {
                  "description": "id of linked image",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created denomination",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "409": {
            "description": "a denominations with this amount already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/denominations/{id}/": {
      "get": {
        "description": "foobar",
        "tags": [
          "denominations"
        ],
        "summary": "get details of given denomination",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "details of denomination",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "delete": {
        "tags": [
          "denominations"
        ],
        "summary": "delete a denomination",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "denomination deleted"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "patch": {
        "tags": [
          "denominations"
        ],
        "summary": "update a denomination",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "denominations",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "image": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "details of updated denomination",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "id not existent"
          },
          "409": {
            "description": "a denomination with this value already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/images/": {
      "get": {
        "description": "Information about image handling",
        "tags": [
          "image"
        ],
        "responses": {
          "204": {
            "description": "The serve is capable of handling images"
          },
          "501": {
            "description": "not implemented"
          }
        }
      },
      "post": {
        "description": "upload image",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "image"
        ],
        "summary": "image data",
        "parameters": [
          {
            "type": "file",
            "description": "file to upload (jpg, png or gif)",
            "name": "image",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          },
          "413": {
            "description": "uploaded file to large"
          },
          "415": {
            "description": "unsupported media type"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/images/{id}": {
      "get": {
        "description": "image metadata",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "image metadata",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          }
        }
      }
    },
    "/images/{id}/img": {
      "get": {
        "description": "image data",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/gif"
        ],
        "tags": [
          "image"
        ],
        "summary": "image data",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the image to get.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "image data blob"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error i.e."
          }
        }
      }
    },
    "/info/": {
      "get": {
        "description": "global server information and capabilities",
        "tags": [
          "server"
        ],
        "responses": {
          "200": {
            "description": "global server information",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Server"
              }
            }
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "returns all products",
        "responses": {
          "200": {
            "description": "products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "creates a new product",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "alcohol": {
                  "description": "vol % alcohol without decimal seperator and one decimal place",
                  "type": "integer",
                  "example": 45
                },
                "caffeine": {
                  "description": "mg of caffeine per 100 ml/mg/unit",
                  "type": "integer"
                },
                "energy": {
                  "description": "energy per 100g / 100ml",
                  "type": "integer",
                  "example": 42
                },
                "image": {
                  "type": "integer",
                  "example": 23
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "integer",
                  "default": 150
                },
                "sugar": {
                  "description": "g sugar per 100g / 100ml with one deciaml place",
                  "type": "integer",
                  "example": 108
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created Product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "409": {
            "description": "a product with the same name already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/products/{id}/": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "returns specific product",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "deletes specific product",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "product deleted"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "patch": {
        "tags": [
          "products"
        ],
        "summary": "edits specific product",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "product",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "alcohol": {
                  "type": "integer"
                },
                "caffeine": {
                  "type": "integer"
                },
                "image": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "edited product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "returns all users",
        "responses": {
          "200": {
            "description": "list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "creates new User",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "audit": {
                  "type": "boolean",
                  "default": false
                },
                "avatar": {
                  "type": "integer"
                },
                "balance": {
                  "description": "in cents",
                  "type": "integer",
                  "default": 0
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "name": {
                  "type": "string"
                },
                "redirect": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/users/barcode/{barcode}/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get users details by associated barcode",
        "parameters": [
          {
            "type": "integer",
            "description": "barcode associated with user",
            "name": "barcode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user's details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "no user associated to the given barcode"
          },
          "404": {
            "description": "barcode not found"
          }
        }
      }
    },
    "/users/stats/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "stats about users",
        "responses": {
          "200": {
            "description": "stats",
            "schema": {
              "type": "object",
              "required": [
                "user_count",
                "active_count",
                "balance_sum"
              ],
              "properties": {
                "active_count": {
                  "type": "integer"
                },
                "balance_sum": {
                  "description": "as cents",
                  "type": "integer"
                },
                "user_count": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "returns specific user",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "deletes user",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "edits specific user",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "audit": {
                  "type": "boolean"
                },
                "avatar": {
                  "type": "integer"
                },
                "balance": {
                  "description": "in cents",
                  "type": "integer"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "name": {
                  "type": "string"
                },
                "redirect": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "edited user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/buy/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "buys product with id product from user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/buy/barcode/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "buys product with barcode for user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "barcode",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/deposit/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "adds amount (in cents) to the balance of the user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "amount",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/spend/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "subtracts amount (in cents) from the balance of the user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "amount",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/users/{id}/transfer/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "transfer funds between users",
        "parameters": [
          {
            "type": "integer",
            "description": "id of the funds sending user",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "receiver": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "transaction successful"
          },
          "400": {
            "description": "bad request"
          },
          "402": {
            "description": "sending user has insufficient funds on his account"
          },
          "404": {
            "description": "sending user id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Barcode": {
      "type": "object",
      "required": [
        "id",
        "barcode",
        "type",
        "linked",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "barcode": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "linked": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "default": "product"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Denomination": {
      "type": "object",
      "required": [
        "amount",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "amount": {
          "description": "amount in cents / subdevision of currency",
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Image": {
      "type": "object",
      "required": [
        "file_name",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "file_name": {
          "type": "string",
          "example": "example.png"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "name",
        "id",
        "price",
        "created_at",
        "updated_at",
        "active"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "default": true
        },
        "alcohol": {
          "description": "volume percent (with two decimal places)",
          "type": "integer",
          "example": 450
        },
        "caffeine": {
          "description": "mg of caffeine per 100 ml/mg/unit",
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "energy": {
          "description": "energy per 100ml / 100g with no decimal place",
          "type": "integer",
          "example": 42
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "default": 150
        },
        "sugar": {
          "description": "g sugar per 100g / 100ml with one decimal place",
          "type": "integer",
          "example": 108
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Server": {
      "type": "object",
      "required": [
        "version",
        "currency",
        "currency_before",
        "decimal_seperator",
        "energy"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "default": "€",
          "example": "€"
        },
        "currency_before": {
          "description": "If true the currency symbol is show before the sum",
          "type": "boolean",
          "default": false,
          "example": false
        },
        "decimal_seperator": {
          "description": "if None, the currency uses no subdevision and therefore no decimal seperator is used. E.g. in Sweden",
          "type": "string",
          "default": ",",
          "example": ","
        },
        "defaults": {
          "description": "defaults for new products",
          "type": "object",
          "properties": {
            "active": {
              "description": "default weather a product is active upon creation or not",
              "type": "boolean",
              "example": true
            },
            "alcohol": {
              "description": "default volume percent of alcohol (with two decimal places)",
              "type": "integer",
              "example": 450
            },
            "caffeine": {
              "description": "default caffeine contents in mg per 100ml/g",
              "type": "integer",
              "example": 20
            },
            "energy": {
              "description": "default energy per 100g / 100ml without decimal places",
              "type": "integer",
              "example": 42
            },
            "package_size": {
              "description": "default package size",
              "type": "string",
              "example": "0,33 ml pro Flasche"
            },
            "price": {
              "description": "default price in cent",
              "type": "integer",
              "example": 150
            },
            "sugar": {
              "description": "default sugar amount per 100g / 100ml with one decimal place",
              "type": "integer",
              "example": 123
            }
          }
        },
        "energy": {
          "description": "unit of energy e.g. kcal or kj",
          "type": "string",
          "default": "kcal",
          "example": "kcal"
        },
        "global_credit_limit": {
          "description": "global credit limit in cent (subdevision of currency); to disable set to false",
          "type": "integer",
          "example": 2000
        },
        "version": {
          "type": "string",
          "default": "3.0.0"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "name",
        "id",
        "created_at",
        "updated_at",
        "balance",
        "active",
        "audit",
        "redirect"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "default": true
        },
        "audit": {
          "type": "boolean",
          "default": false
        },
        "avatar": {
          "type": "integer"
        },
        "balance": {
          "description": "in cents",
          "type": "integer"
        },
        "barcode": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "redirect": {
          "type": "boolean",
          "default": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "tags": [
    {
      "name": "products"
    },
    {
      "name": "users"
    },
    {
      "name": "audits"
    },
    {
      "name": "server"
    },
    {
      "name": "image"
    },
    {
      "name": "barcodes"
    },
    {
      "name": "denominations"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for transactions",
    "title": "Space-Market",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "3.0.0"
  },
  "basePath": "/v3",
  "paths": {
    "/audits/": {
      "get": {
        "description": "statistics about previous transactions",
        "tags": [
          "audits"
        ],
        "summary": "statistics about previous transactions",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "description": "start date in ISO8601 format",
            "name": "start",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "end date in ISO8601 format",
            "name": "end",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "audits",
            "schema": {
              "type": "object",
              "required": [
                "sum",
                "payments_sum",
                "deposits_sum",
                "audits"
              ],
              "properties": {
                "audits": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AuditsItems0"
                  }
                },
                "deposits_sum": {
                  "description": "as cents",
                  "type": "integer"
                },
                "payments_sum": {
                  "description": "as cents",
                  "type": "integer"
                },
                "sum": {
                  "description": "sum as cents",
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "Audits deactivated by user"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/barcodes/": {
      "post": {
        "tags": [
          "barcodes"
        ],
        "summary": "create a new barcode",
        "parameters": [
          {
            "name": "barcode",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "barcode": {
                  "type": "string"
                },
                "linked": {
                  "description": "id of linked object (product or user)",
                  "type": "integer"
                },
                "type": {
                  "description": "product or user",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created barcode",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Barcode"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "409": {
            "description": "a barcode with this name already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/barcodes/{id}/": {
      "get": {
        "tags": [
          "barcodes"
        ],
        "summary": "get details for a given barcode",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "details of barcode",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Barcode"
              }
            }
          },
          "404": {
            "description": "barcode not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "delete": {
        "tags": [
          "barcodes"
        ],
        "summary": "delete the barcode",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "barcode deleted"
          },
          "404": {
            "description": "barcode not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "patch": {
        "tags": [
          "barcodes"
        ],
        "summary": "update an existing barcode",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "barcode",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "linked": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "barcode updated",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Barcode"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "barcode not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/denominations/": {
      "get": {
        "tags": [
          "denominations"
        ],
        "summary": "get a list of all configured denominations",
        "responses": {
          "200": {
            "description": "list of denominations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "409": {
            "description": "a denomination with this value already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "post": {
        "tags": [
          "denominations"
        ],
        "summary": "create a new denomination",
        "parameters": [
          {
            "name": "denominations",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "image": {
                  "description": "id of linked image",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created denomination",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "409": {
            "description": "a denominations with this amount already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/denominations/{id}/": {
      "get": {
        "description": "foobar",
        "tags": [
          "denominations"
        ],
        "summary": "get details of given denomination",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "details of denomination",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "delete": {
        "tags": [
          "denominations"
        ],
        "summary": "delete a denomination",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "denomination deleted"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "patch": {
        "tags": [
          "denominations"
        ],
        "summary": "update a denomination",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "denominations",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "image": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "details of updated denomination",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denomination"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "id not existent"
          },
          "409": {
            "description": "a denomination with this value already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/images/": {
      "get": {
        "description": "Information about image handling",
        "tags": [
          "image"
        ],
        "responses": {
          "204": {
            "description": "The serve is capable of handling images"
          },
          "501": {
            "description": "not implemented"
          }
        }
      },
      "post": {
        "description": "upload image",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "image"
        ],
        "summary": "image data",
        "parameters": [
          {
            "type": "file",
            "description": "file to upload (jpg, png or gif)",
            "name": "image",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          },
          "413": {
            "description": "uploaded file to large"
          },
          "415": {
            "description": "unsupported media type"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/images/{id}": {
      "get": {
        "description": "image metadata",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "image metadata",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          }
        }
      }
    },
    "/images/{id}/img": {
      "get": {
        "description": "image data",
        "produces": [
          "image/gif",
          "image/jpeg",
          "image/png"
        ],
        "tags": [
          "image"
        ],
        "summary": "image data",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the image to get.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "image data blob"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error i.e."
          }
        }
      }
    },
    "/info/": {
      "get": {
        "description": "global server information and capabilities",
        "tags": [
          "server"
        ],
        "responses": {
          "200": {
            "description": "global server information",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Server"
              }
            }
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "returns all products",
        "responses": {
          "200": {
            "description": "products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "creates a new product",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "alcohol": {
                  "description": "vol % alcohol without decimal seperator and one decimal place",
                  "type": "integer",
                  "example": 45
                },
                "caffeine": {
                  "description": "mg of caffeine per 100 ml/mg/unit",
                  "type": "integer"
                },
                "energy": {
                  "description": "energy per 100g / 100ml",
                  "type": "integer",
                  "example": 42
                },
                "image": {
                  "type": "integer",
                  "example": 23
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "integer",
                  "default": 150
                },
                "sugar": {
                  "description": "g sugar per 100g / 100ml with one deciaml place",
                  "type": "integer",
                  "example": 108
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created Product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "409": {
            "description": "a product with the same name already exists"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/products/{id}/": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "returns specific product",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "deletes specific product",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "product deleted"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "patch": {
        "tags": [
          "products"
        ],
        "summary": "edits specific product",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "product",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "alcohol": {
                  "type": "integer"
                },
                "caffeine": {
                  "type": "integer"
                },
                "image": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "edited product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "returns all users",
        "responses": {
          "200": {
            "description": "list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "creates new User",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "audit": {
                  "type": "boolean",
                  "default": false
                },
                "avatar": {
                  "type": "integer"
                },
                "balance": {
                  "description": "in cents",
                  "type": "integer",
                  "default": 0
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "name": {
                  "type": "string"
                },
                "redirect": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/users/barcode/{barcode}/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get users details by associated barcode",
        "parameters": [
          {
            "type": "integer",
            "description": "barcode associated with user",
            "name": "barcode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user's details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "no user associated to the given barcode"
          },
          "404": {
            "description": "barcode not found"
          }
        }
      }
    },
    "/users/stats/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "stats about users",
        "responses": {
          "200": {
            "description": "stats",
            "schema": {
              "type": "object",
              "required": [
                "user_count",
                "active_count",
                "balance_sum"
              ],
              "properties": {
                "active_count": {
                  "type": "integer"
                },
                "balance_sum": {
                  "description": "as cents",
                  "type": "integer"
                },
                "user_count": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "returns specific user",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "deletes user",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "edits specific user",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "audit": {
                  "type": "boolean"
                },
                "avatar": {
                  "type": "integer"
                },
                "balance": {
                  "description": "in cents",
                  "type": "integer"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "name": {
                  "type": "string"
                },
                "redirect": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "edited user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/buy/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "buys product with id product from user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/buy/barcode/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "buys product with barcode for user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "barcode",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/deposit/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "adds amount (in cents) to the balance of the user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "amount",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/spend/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "subtracts amount (in cents) from the balance of the user with id",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "amount",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/users/{id}/transfer/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "transfer funds between users",
        "parameters": [
          {
            "type": "integer",
            "description": "id of the funds sending user",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "receiver": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "transaction successful"
          },
          "400": {
            "description": "bad request"
          },
          "402": {
            "description": "sending user has insufficient funds on his account"
          },
          "404": {
            "description": "sending user id not existent"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    }
  },
  "definitions": {
    "AuditsItems0": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "difference": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "product": {
          "type": "integer"
        }
      }
    },
    "Barcode": {
      "type": "object",
      "required": [
        "id",
        "barcode",
        "type",
        "linked",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "barcode": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "linked": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "default": "product"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Denomination": {
      "type": "object",
      "required": [
        "amount",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "amount": {
          "description": "amount in cents / subdevision of currency",
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Image": {
      "type": "object",
      "required": [
        "file_name",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "file_name": {
          "type": "string",
          "example": "example.png"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "name",
        "id",
        "price",
        "created_at",
        "updated_at",
        "active"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "default": true
        },
        "alcohol": {
          "description": "volume percent (with two decimal places)",
          "type": "integer",
          "example": 450
        },
        "caffeine": {
          "description": "mg of caffeine per 100 ml/mg/unit",
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "energy": {
          "description": "energy per 100ml / 100g with no decimal place",
          "type": "integer",
          "example": 42
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "default": 150
        },
        "sugar": {
          "description": "g sugar per 100g / 100ml with one decimal place",
          "type": "integer",
          "example": 108
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Server": {
      "type": "object",
      "required": [
        "version",
        "currency",
        "currency_before",
        "decimal_seperator",
        "energy"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "default": "€",
          "example": "€"
        },
        "currency_before": {
          "description": "If true the currency symbol is show before the sum",
          "type": "boolean",
          "default": false,
          "example": false
        },
        "decimal_seperator": {
          "description": "if None, the currency uses no subdevision and therefore no decimal seperator is used. E.g. in Sweden",
          "type": "string",
          "default": ",",
          "example": ","
        },
        "defaults": {
          "description": "defaults for new products",
          "type": "object",
          "properties": {
            "active": {
              "description": "default weather a product is active upon creation or not",
              "type": "boolean",
              "example": true
            },
            "alcohol": {
              "description": "default volume percent of alcohol (with two decimal places)",
              "type": "integer",
              "example": 450
            },
            "caffeine": {
              "description": "default caffeine contents in mg per 100ml/g",
              "type": "integer",
              "example": 20
            },
            "energy": {
              "description": "default energy per 100g / 100ml without decimal places",
              "type": "integer",
              "example": 42
            },
            "package_size": {
              "description": "default package size",
              "type": "string",
              "example": "0,33 ml pro Flasche"
            },
            "price": {
              "description": "default price in cent",
              "type": "integer",
              "example": 150
            },
            "sugar": {
              "description": "default sugar amount per 100g / 100ml with one decimal place",
              "type": "integer",
              "example": 123
            }
          }
        },
        "energy": {
          "description": "unit of energy e.g. kcal or kj",
          "type": "string",
          "default": "kcal",
          "example": "kcal"
        },
        "global_credit_limit": {
          "description": "global credit limit in cent (subdevision of currency); to disable set to false",
          "type": "integer",
          "example": 2000
        },
        "version": {
          "type": "string",
          "default": "3.0.0"
        }
      }
    },
    "ServerDefaults": {
      "description": "defaults for new products",
      "type": "object",
      "properties": {
        "active": {
          "description": "default weather a product is active upon creation or not",
          "type": "boolean",
          "example": true
        },
        "alcohol": {
          "description": "default volume percent of alcohol (with two decimal places)",
          "type": "integer",
          "example": 450
        },
        "caffeine": {
          "description": "default caffeine contents in mg per 100ml/g",
          "type": "integer",
          "example": 20
        },
        "energy": {
          "description": "default energy per 100g / 100ml without decimal places",
          "type": "integer",
          "example": 42
        },
        "package_size": {
          "description": "default package size",
          "type": "string",
          "example": "0,33 ml pro Flasche"
        },
        "price": {
          "description": "default price in cent",
          "type": "integer",
          "example": 150
        },
        "sugar": {
          "description": "default sugar amount per 100g / 100ml with one decimal place",
          "type": "integer",
          "example": 123
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "name",
        "id",
        "created_at",
        "updated_at",
        "balance",
        "active",
        "audit",
        "redirect"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "default": true
        },
        "audit": {
          "type": "boolean",
          "default": false
        },
        "avatar": {
          "type": "integer"
        },
        "balance": {
          "description": "in cents",
          "type": "integer"
        },
        "barcode": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "redirect": {
          "type": "boolean",
          "default": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "tags": [
    {
      "name": "products"
    },
    {
      "name": "users"
    },
    {
      "name": "audits"
    },
    {
      "name": "server"
    },
    {
      "name": "image"
    },
    {
      "name": "barcodes"
    },
    {
      "name": "denominations"
    }
  ]
}`))
}
