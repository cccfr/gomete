// Code generated by go-swagger; DO NOT EDIT.

package denominations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteDenominationsIDHandlerFunc turns a function with the right signature into a delete denominations ID handler
type DeleteDenominationsIDHandlerFunc func(DeleteDenominationsIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteDenominationsIDHandlerFunc) Handle(params DeleteDenominationsIDParams) middleware.Responder {
	return fn(params)
}

// DeleteDenominationsIDHandler interface for that can handle valid delete denominations ID params
type DeleteDenominationsIDHandler interface {
	Handle(DeleteDenominationsIDParams) middleware.Responder
}

// NewDeleteDenominationsID creates a new http.Handler for the delete denominations ID operation
func NewDeleteDenominationsID(ctx *middleware.Context, handler DeleteDenominationsIDHandler) *DeleteDenominationsID {
	return &DeleteDenominationsID{Context: ctx, Handler: handler}
}

/*DeleteDenominationsID swagger:route DELETE /denominations/{id}/ denominations deleteDenominationsId

delete a denomination

*/
type DeleteDenominationsID struct {
	Context *middleware.Context
	Handler DeleteDenominationsIDHandler
}

func (o *DeleteDenominationsID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteDenominationsIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
