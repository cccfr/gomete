// Code generated by go-swagger; DO NOT EDIT.

package barcodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PatchBarcodesIDHandlerFunc turns a function with the right signature into a patch barcodes ID handler
type PatchBarcodesIDHandlerFunc func(PatchBarcodesIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PatchBarcodesIDHandlerFunc) Handle(params PatchBarcodesIDParams) middleware.Responder {
	return fn(params)
}

// PatchBarcodesIDHandler interface for that can handle valid patch barcodes ID params
type PatchBarcodesIDHandler interface {
	Handle(PatchBarcodesIDParams) middleware.Responder
}

// NewPatchBarcodesID creates a new http.Handler for the patch barcodes ID operation
func NewPatchBarcodesID(ctx *middleware.Context, handler PatchBarcodesIDHandler) *PatchBarcodesID {
	return &PatchBarcodesID{Context: ctx, Handler: handler}
}

/*PatchBarcodesID swagger:route PATCH /barcodes/{id}/ barcodes patchBarcodesId

update an existing barcode

*/
type PatchBarcodesID struct {
	Context *middleware.Context
	Handler PatchBarcodesIDHandler
}

func (o *PatchBarcodesID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPatchBarcodesIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PatchBarcodesIDBody patch barcodes ID body
//
// swagger:model PatchBarcodesIDBody
type PatchBarcodesIDBody struct {

	// linked
	Linked int64 `json:"linked,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this patch barcodes ID body
func (o *PatchBarcodesIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchBarcodesIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchBarcodesIDBody) UnmarshalBinary(b []byte) error {
	var res PatchBarcodesIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
