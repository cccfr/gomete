// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteProductsIDHandlerFunc turns a function with the right signature into a delete products ID handler
type DeleteProductsIDHandlerFunc func(DeleteProductsIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteProductsIDHandlerFunc) Handle(params DeleteProductsIDParams) middleware.Responder {
	return fn(params)
}

// DeleteProductsIDHandler interface for that can handle valid delete products ID params
type DeleteProductsIDHandler interface {
	Handle(DeleteProductsIDParams) middleware.Responder
}

// NewDeleteProductsID creates a new http.Handler for the delete products ID operation
func NewDeleteProductsID(ctx *middleware.Context, handler DeleteProductsIDHandler) *DeleteProductsID {
	return &DeleteProductsID{Context: ctx, Handler: handler}
}

/*DeleteProductsID swagger:route DELETE /products/{id}/ products deleteProductsId

deletes specific product

*/
type DeleteProductsID struct {
	Context *middleware.Context
	Handler DeleteProductsIDHandler
}

func (o *DeleteProductsID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteProductsIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
