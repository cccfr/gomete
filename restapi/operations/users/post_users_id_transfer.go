// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostUsersIDTransferHandlerFunc turns a function with the right signature into a post users ID transfer handler
type PostUsersIDTransferHandlerFunc func(PostUsersIDTransferParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostUsersIDTransferHandlerFunc) Handle(params PostUsersIDTransferParams) middleware.Responder {
	return fn(params)
}

// PostUsersIDTransferHandler interface for that can handle valid post users ID transfer params
type PostUsersIDTransferHandler interface {
	Handle(PostUsersIDTransferParams) middleware.Responder
}

// NewPostUsersIDTransfer creates a new http.Handler for the post users ID transfer operation
func NewPostUsersIDTransfer(ctx *middleware.Context, handler PostUsersIDTransferHandler) *PostUsersIDTransfer {
	return &PostUsersIDTransfer{Context: ctx, Handler: handler}
}

/*PostUsersIDTransfer swagger:route POST /users/{id}/transfer/ users postUsersIdTransfer

transfer funds between users

*/
type PostUsersIDTransfer struct {
	Context *middleware.Context
	Handler PostUsersIDTransferHandler
}

func (o *PostUsersIDTransfer) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostUsersIDTransferParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostUsersIDTransferBody post users ID transfer body
//
// swagger:model PostUsersIDTransferBody
type PostUsersIDTransferBody struct {

	// amount
	Amount int64 `json:"amount,omitempty"`

	// receiver
	Receiver int64 `json:"receiver,omitempty"`
}

// Validate validates this post users ID transfer body
func (o *PostUsersIDTransferBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUsersIDTransferBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUsersIDTransferBody) UnmarshalBinary(b []byte) error {
	var res PostUsersIDTransferBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
